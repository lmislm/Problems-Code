// 实现兼容数组和对象的遍历方法
// 时间限制：C/C++语言 1000MS；其他语言 3000MS
// 内存限制：C/C++语言 65536KB；其他语言 589824KB
// 题目描述：
// 实现一个 map 方法，调用方式为 map(data, function(value, key) { return value })。

// 当 data 为数组时，value 是数组元素，key 是数组下标索引；

// 当 data 为对象时，value 为对象的 property-value，key 为对象里的 property-key；map 方法的返回值为当前key对应的新的 value；

// 输入
// 可能输入空数组 []，空对象 {}，null， 数组，字符串等有效和无效值。

// 输出
// 当输入为非数组和非对象等异常值，返回 null；

// 其余情况，返回 map 遍历后的新数组或新对象，其中的 value 全部被映射为 { key, value} 的形式。

// 注意：对于非null值，输出一个标准json格式，字段名需要用英文双引号引起来，值如果为字符串，则也需要用双引号引起来。英文冒号、花括号、中括号前后都不能带空格或制表符（即不要任何缩进格式）。

// 样例输入
// [1,2,3,4]

// {a:1,b:"test}

// 样例输出
// [1,2,3,4]对应的输出是：[{"key":0,"value":1},{"key":1,"value":2},{"key":2,"value":3},{"key":3,"value":4}]

// {a:1,b:"test}对应的输出是：{"a":{"key":"a","value":1},"b":{"key":"b","value":"test"}}
